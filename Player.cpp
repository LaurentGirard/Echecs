/**
* @file Player.cpp
* @author P. Sullivan, G.Laurent
* @since 25/12/2015
* @brief implémentation des méthodes de la classe Player
*
**/

#include "State.cpp"
#include "Player.hpp"

//------------------------------------------------------------------------------------------------------
Player::Player(std::string name) : 	_name(name)
{
	_gameState = new GameState(this);
	_checkState = new CheckState(this);
	_mateState = new MateState(this);
	_nullState = new NullState(this);
	_endState = new EndState(this);
	_state = _gameState;
}

//------------------------------------------------------------------------------------------------------
Player::~Player(){}

//------------------------------------------------------------------------------------------------------
void Player::inGame()
{
	_state->inGame();
}

//------------------------------------------------------------------------------------------------------
void Player::check()
{
	_state->check();
}

//------------------------------------------------------------------------------------------------------
void Player::checkMate()
{
	_state->checkMate();
}

//------------------------------------------------------------------------------------------------------
void Player::gameNull()
{
	_state->gameNull();
}

//------------------------------------------------------------------------------------------------------
void Player::gameEnd()
{
	_state->gameEnd();
}

//------------------------------------------------------------------------------------------------------
void Player::printState()
{
	_state->print();
}

//------------------------------------------------------------------------------------------------------
std::string Player::getName()
{
	return _name;
}

//------------------------------------------------------------------------------------------------------
void Player::setName(std::string newName)
{
	_name = newName;
}

//------------------------------------------------------------------------------------------------------
State* Player::getState()
{
	return _state;
}

//------------------------------------------------------------------------------------------------------
void Player::setState(State *newState)
{
	_state = newState;
}

//------------------------------------------------------------------------------------------------------
State* Player::getGameState()
{
	return _gameState;
}

//------------------------------------------------------------------------------------------------------
State* Player::getCheckState()
{
	return _checkState;
}

//------------------------------------------------------------------------------------------------------
State* Player::getMateState()
{
	return _mateState;
}

//------------------------------------------------------------------------------------------------------
State* Player::getNullState()
{
	return _nullState;
}

//------------------------------------------------------------------------------------------------------
State* Player::getEndState()
{
	return _endState;
}